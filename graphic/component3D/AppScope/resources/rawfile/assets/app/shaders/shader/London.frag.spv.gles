/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#version 320 es
precision highp float;
precision highp int;

layout(std140) uniform s0_b2
{
    vec2 inputResolution;
} _s0_b2;

layout(std140) uniform s0_b1
{
    vec2 time;
} _s0_b1;

uniform highp sampler2D s1_b1_s1_b0;

layout(location = 0) out vec4 outColor;

float _2987;

void main()
{
    vec2 _440 = vec2(gl_FragCoord.x, -gl_FragCoord.y);
    float _478 = mod(_s0_b1.time.x, 102.0);
    float _508 = smoothstep(0.0, 70.0, _478);
    float _511 = min(1.0, _478 * 0.014285714365541934967041015625);
    float _517 = fma(_511 - 1.0, 1.0 - _511, 1.0);
    float _522 = mix(0.300000011920928955078125, 1.2000000476837158203125, _508);
    vec2 _525 = ((_440 - (_s0_b2.inputResolution * 0.5)) / vec2(_s0_b2.inputResolution.y)) * _522;
    float _528 = smoothstep(0.5, 1.0, _508);
    vec2 _540 = _525 - vec2(0.0, -0.100000001490116119384765625);
    float _543 = _540.x * 0.5;
    float _548 = smoothstep(110.0, 70.0, _478);
    float _567 = smoothstep(0.4000000059604644775390625 * _548, 0.20000000298023223876953125 * _548, length(vec2(_543, fma(sqrt(abs(_543)) * (-0.5), _548, _540.y))));
    float _569 = _567 * _548;
    vec2 _575 = _525 * 1.5;
    vec2 _586 = ((_440 / _s0_b2.inputResolution) - vec2(0.5)) * fma(_522, 0.100000001490116119384765625, 0.89999997615814208984375);
    float _593 = smoothstep(-0.5, 1.0, _569) * 2.0;
    float _596 = smoothstep(0.25, 0.75, _569);
    float _599 = smoothstep(0.0, 0.5, _569);
    vec2 _847 = _575 * 40.0;
    vec2 _849 = floor(_847);
    vec3 _893 = fract(vec3(fma(_849.x, 107.4499969482421875, _849.y * 3543.654052734375)) * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
    vec3 _902 = _893 + vec3(dot(_893, _893.yzx + vec3(19.1900005340576171875)));
    float _904 = _902.x;
    float _906 = _902.y;
    float _909 = _902.z;
    vec3 _928 = fract(vec3((_904 + _906) * _909, (_904 + _909) * _906, (_906 + _909) * _904));
    float _873 = _928.z;
    float _875 = fract(fma(_517, 17.5, _873));
    float _970 = _575.y;
    vec2 _2756 = _575;
    _2756.y = fma(_517, 13.125, _970) + fract(sin(floor(_575 * vec2(12.0, 2.0)).x * 12345.564453125) * 7658.759765625);
    vec2 _989 = _2756 * vec2(12.0, 2.0);
    vec2 _990 = floor(_989);
    vec3 _1141 = fract(vec3(fma(_990.x, 35.200000762939453125, _990.y * 2376.10009765625)) * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
    vec3 _1150 = _1141 + vec3(dot(_1141, _1141.yzx + vec3(19.1900005340576171875)));
    float _1152 = _1150.x;
    float _1154 = _1150.y;
    float _1157 = _1150.z;
    vec3 _1176 = fract(vec3((_1152 + _1154) * _1157, _2987, (_1154 + _1157) * _1152));
    vec2 _1003 = fract(_989) - vec2(0.5, 0.0);
    float _1006 = _1176.x - 0.5;
    float _1021 = _1176.z;
    float _1025 = fma(sin(fma(_970, 20.0, sin(_970 * 20.0))) * (0.5 - abs(_1006)), _1021 - 0.5, _1006);
    float _1027 = _1025 * 0.699999988079071044921875;
    float _1032 = fract(fma(_517, 17.5, _1021));
    float _1037 = fma(fma(smoothstep(0.0, 0.85000002384185791015625, _1032), smoothstep(1.0, 0.85000002384185791015625, _1032), -0.5), 0.89999997615814208984375, 0.5);
    float _1052 = _1003.y;
    float _1054 = sqrt(smoothstep(1.0, _1037, _1052));
    float _1072 = smoothstep(-0.0199999995529651641845703125, 0.0199999995529651641845703125, _1052 - _1037);
    vec2 _808 = vec2(fma(smoothstep(0.300000011920928955078125, 0.0, length(_1003 - vec2(_1027, fract(_970 * 10.0) + (_1052 - 0.5)))) * _1054, _1072, smoothstep(0.4000000059604644775390625, 0.0, length((_1003 - vec2(_1027, _1037)) * vec2(1.0, 6.0)))), smoothstep(0.23000000417232513427734375 * _1054, (0.1500000059604644775390625 * _1054) * _1054, abs(fma(-_1025, 0.699999988079071044921875, _1003.x))) * ((_1072 * _1054) * _1054)) * _596;
    vec2 _810 = _575 * 1.85000002384185791015625;
    float _1218 = _810.y;
    vec2 _2783 = _810;
    _2783.y = fma(_517, 13.125, _1218) + fract(sin(floor(_810 * vec2(12.0, 2.0)).x * 12345.564453125) * 7658.759765625);
    vec2 _1237 = _2783 * vec2(12.0, 2.0);
    vec2 _1238 = floor(_1237);
    vec3 _1389 = fract(vec3(fma(_1238.x, 35.200000762939453125, _1238.y * 2376.10009765625)) * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
    vec3 _1398 = _1389 + vec3(dot(_1389, _1389.yzx + vec3(19.1900005340576171875)));
    float _1400 = _1398.x;
    float _1402 = _1398.y;
    float _1405 = _1398.z;
    vec3 _1424 = fract(vec3((_1400 + _1402) * _1405, _2987, (_1402 + _1405) * _1400));
    vec2 _1251 = fract(_1237) - vec2(0.5, 0.0);
    float _1254 = _1424.x - 0.5;
    float _1269 = _1424.z;
    float _1273 = fma(sin(fma(_1218, 20.0, sin(_1218 * 20.0))) * (0.5 - abs(_1254)), _1269 - 0.5, _1254);
    float _1275 = _1273 * 0.699999988079071044921875;
    float _1280 = fract(fma(_517, 17.5, _1269));
    float _1285 = fma(fma(smoothstep(0.0, 0.85000002384185791015625, _1280), smoothstep(1.0, 0.85000002384185791015625, _1280), -0.5), 0.89999997615814208984375, 0.5);
    float _1300 = _1251.y;
    float _1302 = sqrt(smoothstep(1.0, _1285, _1300));
    float _1320 = smoothstep(-0.0199999995529651641845703125, 0.0199999995529651641845703125, _1300 - _1285);
    vec2 _814 = vec2(fma(smoothstep(0.300000011920928955078125, 0.0, length(_1251 - vec2(_1275, fract(_1218 * 10.0) + (_1300 - 0.5)))) * _1302, _1320, smoothstep(0.4000000059604644775390625, 0.0, length((_1251 - vec2(_1275, _1285)) * vec2(1.0, 6.0)))), smoothstep(0.23000000417232513427734375 * _1302, (0.1500000059604644775390625 * _1302) * _1302, abs(fma(-_1273, 0.699999988079071044921875, _1251.x))) * ((_1320 * _1302) * _1302)) * _599;
    float _823 = smoothstep(0.300000011920928955078125, 1.0, fma((smoothstep(0.300000011920928955078125, 0.0, length((fract(_847) - vec2(0.5)) - ((_928.xy - vec2(0.5)) * 0.699999988079071044921875))) * fract(_873 * 10.0)) * (smoothstep(0.0, 0.02500000037252902984619140625, _875) * smoothstep(1.0, 0.02500000037252902984619140625, _875)), _593, _808.x) + _814.x);
    vec2 _618 = _575 + vec2(0.001000000047497451305389404296875, 0.0);
    vec2 _1494 = _618 * 40.0;
    vec2 _1496 = floor(_1494);
    vec3 _1540 = fract(vec3(fma(_1496.x, 107.4499969482421875, _1496.y * 3543.654052734375)) * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
    vec3 _1549 = _1540 + vec3(dot(_1540, _1540.yzx + vec3(19.1900005340576171875)));
    float _1551 = _1549.x;
    float _1553 = _1549.y;
    float _1556 = _1549.z;
    vec3 _1575 = fract(vec3((_1551 + _1553) * _1556, (_1551 + _1556) * _1553, (_1553 + _1556) * _1551));
    float _1520 = _1575.z;
    float _1522 = fract(fma(_517, 17.5, _1520));
    float _1617 = _618.y;
    vec2 _2827 = _618;
    _2827.y = fma(_517, 13.125, _1617) + fract(sin(floor(_618 * vec2(12.0, 2.0)).x * 12345.564453125) * 7658.759765625);
    vec2 _1636 = _2827 * vec2(12.0, 2.0);
    vec2 _1637 = floor(_1636);
    vec3 _1788 = fract(vec3(fma(_1637.x, 35.200000762939453125, _1637.y * 2376.10009765625)) * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
    vec3 _1797 = _1788 + vec3(dot(_1788, _1788.yzx + vec3(19.1900005340576171875)));
    float _1799 = _1797.x;
    float _1801 = _1797.y;
    float _1804 = _1797.z;
    vec3 _1823 = fract(vec3((_1799 + _1801) * _1804, _2987, (_1801 + _1804) * _1799));
    vec2 _1650 = fract(_1636) - vec2(0.5, 0.0);
    float _1653 = _1823.x - 0.5;
    float _1668 = _1823.z;
    float _1674 = fma(sin(fma(_1617, 20.0, sin(_1617 * 20.0))) * (0.5 - abs(_1653)), _1668 - 0.5, _1653) * 0.699999988079071044921875;
    float _1679 = fract(fma(_517, 17.5, _1668));
    float _1684 = fma(fma(smoothstep(0.0, 0.85000002384185791015625, _1679), smoothstep(1.0, 0.85000002384185791015625, _1679), -0.5), 0.89999997615814208984375, 0.5);
    float _1699 = _1650.y;
    vec2 _1457 = _618 * 1.85000002384185791015625;
    float _1865 = _1457.y;
    vec2 _2854 = _1457;
    _2854.y = fma(_517, 13.125, _1865) + fract(sin(floor(_1457 * vec2(12.0, 2.0)).x * 12345.564453125) * 7658.759765625);
    vec2 _1884 = _2854 * vec2(12.0, 2.0);
    vec2 _1885 = floor(_1884);
    vec3 _2036 = fract(vec3(fma(_1885.x, 35.200000762939453125, _1885.y * 2376.10009765625)) * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
    vec3 _2045 = _2036 + vec3(dot(_2036, _2036.yzx + vec3(19.1900005340576171875)));
    float _2047 = _2045.x;
    float _2049 = _2045.y;
    float _2052 = _2045.z;
    vec3 _2071 = fract(vec3((_2047 + _2049) * _2052, _2987, (_2049 + _2052) * _2047));
    vec2 _1898 = fract(_1884) - vec2(0.5, 0.0);
    float _1901 = _2071.x - 0.5;
    float _1916 = _2071.z;
    float _1922 = fma(sin(fma(_1865, 20.0, sin(_1865 * 20.0))) * (0.5 - abs(_1901)), _1916 - 0.5, _1901) * 0.699999988079071044921875;
    float _1927 = fract(fma(_517, 17.5, _1916));
    float _1932 = fma(fma(smoothstep(0.0, 0.85000002384185791015625, _1927), smoothstep(1.0, 0.85000002384185791015625, _1927), -0.5), 0.89999997615814208984375, 0.5);
    float _1947 = _1898.y;
    float _1470 = smoothstep(0.300000011920928955078125, 1.0, fma((smoothstep(0.300000011920928955078125, 0.0, length((fract(_1494) - vec2(0.5)) - ((_1575.xy - vec2(0.5)) * 0.699999988079071044921875))) * fract(_1520 * 10.0)) * (smoothstep(0.0, 0.02500000037252902984619140625, _1522) * smoothstep(1.0, 0.02500000037252902984619140625, _1522)), _593, (vec2(fma(smoothstep(0.300000011920928955078125, 0.0, length(_1650 - vec2(_1674, fract(_1617 * 10.0) + (_1699 - 0.5)))) * sqrt(smoothstep(1.0, _1684, _1699)), smoothstep(-0.0199999995529651641845703125, 0.0199999995529651641845703125, _1699 - _1684), smoothstep(0.4000000059604644775390625, 0.0, length((_1650 - vec2(_1674, _1684)) * vec2(1.0, 6.0)))), _2987) * _596).x) + (vec2(fma(smoothstep(0.300000011920928955078125, 0.0, length(_1898 - vec2(_1922, fract(_1865 * 10.0) + (_1947 - 0.5)))) * sqrt(smoothstep(1.0, _1932, _1947)), smoothstep(-0.0199999995529651641845703125, 0.0199999995529651641845703125, _1947 - _1932), smoothstep(0.4000000059604644775390625, 0.0, length((_1898 - vec2(_1922, _1932)) * vec2(1.0, 6.0)))), _2987) * _599).x);
    vec2 _634 = _575 + vec2(0.0, 0.001000000047497451305389404296875);
    vec2 _2141 = _634 * 40.0;
    vec2 _2143 = floor(_2141);
    vec3 _2187 = fract(vec3(fma(_2143.x, 107.4499969482421875, _2143.y * 3543.654052734375)) * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
    vec3 _2196 = _2187 + vec3(dot(_2187, _2187.yzx + vec3(19.1900005340576171875)));
    float _2198 = _2196.x;
    float _2200 = _2196.y;
    float _2203 = _2196.z;
    vec3 _2222 = fract(vec3((_2198 + _2200) * _2203, (_2198 + _2203) * _2200, (_2200 + _2203) * _2198));
    float _2167 = _2222.z;
    float _2169 = fract(fma(_517, 17.5, _2167));
    float _2264 = _634.y;
    vec2 _2898 = _634;
    _2898.y = fma(_517, 13.125, _2264) + fract(sin(floor(_634 * vec2(12.0, 2.0)).x * 12345.564453125) * 7658.759765625);
    vec2 _2283 = _2898 * vec2(12.0, 2.0);
    vec2 _2284 = floor(_2283);
    vec3 _2435 = fract(vec3(fma(_2284.x, 35.200000762939453125, _2284.y * 2376.10009765625)) * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
    vec3 _2444 = _2435 + vec3(dot(_2435, _2435.yzx + vec3(19.1900005340576171875)));
    float _2446 = _2444.x;
    float _2448 = _2444.y;
    float _2451 = _2444.z;
    vec3 _2470 = fract(vec3((_2446 + _2448) * _2451, _2987, (_2448 + _2451) * _2446));
    vec2 _2297 = fract(_2283) - vec2(0.5, 0.0);
    float _2300 = _2470.x - 0.5;
    float _2315 = _2470.z;
    float _2321 = fma(sin(fma(_2264, 20.0, sin(_2264 * 20.0))) * (0.5 - abs(_2300)), _2315 - 0.5, _2300) * 0.699999988079071044921875;
    float _2326 = fract(fma(_517, 17.5, _2315));
    float _2331 = fma(fma(smoothstep(0.0, 0.85000002384185791015625, _2326), smoothstep(1.0, 0.85000002384185791015625, _2326), -0.5), 0.89999997615814208984375, 0.5);
    float _2346 = _2297.y;
    vec2 _2104 = _634 * 1.85000002384185791015625;
    float _2512 = _2104.y;
    vec2 _2925 = _2104;
    _2925.y = fma(_517, 13.125, _2512) + fract(sin(floor(_2104 * vec2(12.0, 2.0)).x * 12345.564453125) * 7658.759765625);
    vec2 _2531 = _2925 * vec2(12.0, 2.0);
    vec2 _2532 = floor(_2531);
    vec3 _2683 = fract(vec3(fma(_2532.x, 35.200000762939453125, _2532.y * 2376.10009765625)) * vec3(0.103100001811981201171875, 0.113689996302127838134765625, 0.13786999881267547607421875));
    vec3 _2692 = _2683 + vec3(dot(_2683, _2683.yzx + vec3(19.1900005340576171875)));
    float _2694 = _2692.x;
    float _2696 = _2692.y;
    float _2699 = _2692.z;
    vec3 _2718 = fract(vec3((_2694 + _2696) * _2699, _2987, (_2696 + _2699) * _2694));
    vec2 _2545 = fract(_2531) - vec2(0.5, 0.0);
    float _2548 = _2718.x - 0.5;
    float _2563 = _2718.z;
    float _2569 = fma(sin(fma(_2512, 20.0, sin(_2512 * 20.0))) * (0.5 - abs(_2548)), _2563 - 0.5, _2548) * 0.699999988079071044921875;
    float _2574 = fract(fma(_517, 17.5, _2563));
    float _2579 = fma(fma(smoothstep(0.0, 0.85000002384185791015625, _2574), smoothstep(1.0, 0.85000002384185791015625, _2574), -0.5), 0.89999997615814208984375, 0.5);
    float _2594 = _2545.y;
    float _2117 = smoothstep(0.300000011920928955078125, 1.0, fma((smoothstep(0.300000011920928955078125, 0.0, length((fract(_2141) - vec2(0.5)) - ((_2222.xy - vec2(0.5)) * 0.699999988079071044921875))) * fract(_2167 * 10.0)) * (smoothstep(0.0, 0.02500000037252902984619140625, _2169) * smoothstep(1.0, 0.02500000037252902984619140625, _2169)), _593, (vec2(fma(smoothstep(0.300000011920928955078125, 0.0, length(_2297 - vec2(_2321, fract(_2264 * 10.0) + (_2346 - 0.5)))) * sqrt(smoothstep(1.0, _2331, _2346)), smoothstep(-0.0199999995529651641845703125, 0.0199999995529651641845703125, _2346 - _2331), smoothstep(0.4000000059604644775390625, 0.0, length((_2297 - vec2(_2321, _2331)) * vec2(1.0, 6.0)))), _2987) * _596).x) + (vec2(fma(smoothstep(0.300000011920928955078125, 0.0, length(_2545 - vec2(_2569, fract(_2512 * 10.0) + (_2594 - 0.5)))) * sqrt(smoothstep(1.0, _2579, _2594)), smoothstep(-0.0199999995529651641845703125, 0.0199999995529651641845703125, _2594 - _2579), smoothstep(0.4000000059604644775390625, 0.0, length((_2545 - vec2(_2569, _2579)) * vec2(1.0, 6.0)))), _2987) * _599).x);
    float _702 = _478 + 3.0;
    float _703 = _702 * 0.5;
    float _722 = smoothstep(0.0, 10.0, _478);
    vec3 _757 = ((textureLod(s1_b1_s1_b0, (_586 + vec2(0.5)) + (vec2(_1470 - _823, _2117 - _823) * (1.0 - smoothstep(60.0, 85.0, _478))), mix(fma(-max(_808.y * _593, _814.y * _596), fma(-smoothstep(80.0, 100.0, _478), 0.800000011920928955078125, 1.0), fma(-_567, _548, fma(_528, 1.5, 6.0))), fma(_528, 3.0, 4.0), smoothstep(0.100000001490116119384765625, 0.20000000298023223876953125, _823))).xyz * mix(vec3(1.0), vec3(0.800000011920928955078125, 0.89999997615814208984375, 1.2999999523162841796875), vec3(fma(sin(_702 * 0.100000001490116119384765625), 0.5, 0.5) + _508))) * fma((sin(_703 * sin(_702 * 5.0)) * pow(max(0.0, sin(fma(_702, 0.5, sin(_703)))), 10.0)) * _722, mix(1.0, 0.100000001490116119384765625, _508 * _508), 1.0)) * (1.0 - dot(_586, _586));
    outColor = vec4(mix(pow(_757, vec3(1.2000000476837158203125)), _757, vec3(_569)) * (_722 * smoothstep(102.0, 97.0, _478)), 1.0);
    // outColor = vec4(sin(_s0_b1.time.x), 1.0, 0.0, 1.0);
}

