/*
 * Copyright (C) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { describe, it, expect, TestType, Size, Level, afterEach, beforeAll, afterEach, beforeEach } from "../../../hypium/index";
import AbilityDelegatorRegistry from '@ohos.app.ability.abilityDelegatorRegistry'
import UIAbility from '@ohos.app.ability.UIAbility';
import AbilityStage from '@ohos.app.ability.AbilityStage';
import commonEventManager from '@ohos.commonEventManager';
import Want from '@ohos.app.ability.Want';
import common from '@ohos.app.ability.common';
import { BusinessError } from '@ohos.base';
import Utils from './Util.test';
import hilog from '@ohos.hilog';

let abilityDelegator: AbilityDelegatorRegistry.AbilityDelegator = AbilityDelegatorRegistry.getAbilityDelegator();

export default function PrintTest() {
  describe("PrintTest", () => {

    /**
     * @tc.number ACTS_PRINT_SYNC_0001
     * @tc.name ACTS_PRINT_SYNC_0001
     * @tc.desc Test the api "abilityDelegator.printSync", return the result.
     * @tc.size MediumTest
     * @tc.type Function
     * @tc.level Level 2
     */
    it("ACTS_PRINT_SYNC_0001", Level.LEVEL2, async (done: () => void): Promise<void> =>{
      console.log("ACTS_PRINT_SYNC_0001 :start");
      let abilityDelegator: AbilityDelegatorRegistry.AbilityDelegator;
      let msg = "printSync msg";
      abilityDelegator = AbilityDelegatorRegistry.getAbilityDelegator();
      abilityDelegator.printSync(msg);
      abilityDelegator.printSync("ACTS_PRINTSYNC_0001 printSync");
      expect(true).assertTrue();
      done();
    });

    /**
     * @tc.number ACTS_PRINT_SYNC_0003
     * @tc.name ACTS_PRINT_SYNC_0003
     * @tc.desc Test the api "abilityDelegator.print", return the result.
     *               The printSync information includes escape character.
     * @tc.size MediumTest
     * @tc.type Function
     * @tc.level Level 2
     */
    it("ACTS_PRINT_SYNC_0003", Level.LEVEL2, async (done: () => void): Promise<void> =>{
      console.log("ACTS_PRINT_SYNC_0003 :start");
      let msg: string = "printSync escape character: \n";
      abilityDelegator.printSync(msg);
      abilityDelegator.printSync("ACTS_PRINT_SYNC_0003 printSync");
      expect(true).assertTrue();
      done();
    });

    /**
     * @tc.number ACTS_PRINT_SYNC_0004
     * @tc.name ACTS_PRINT_SYNC_0004
     * @tc.desc Test the api "abilityDelegator.print", return the result.
     *               The printSync information includes special characters, etc.
     * @tc.size MediumTest
     * @tc.type Function
     * @tc.level Level 2
     */
    it("ACTS_PRINT_SYNC_0004", Level.LEVEL2, async (done: () => void): Promise<void> =>{
      console.log("ACTS_PRINT_SYNC_0004 :start");
      let msg: string = "printSync special character: © ® ℃ ℉ ™ ↵";
      abilityDelegator.printSync(msg);
      abilityDelegator.printSync("ACTS_PRINT_SYNC_0004 printSync");
      expect(true).assertTrue();
      done();
    });

    /**
     * @tc.number ACTS_PRINT_SYNC_0005
     * @tc.name ACTS_PRINT_SYNC_0005
     * @tc.desc Test the api "abilityDelegator.print", return the result.
     *               The printSync information includes Chinese etc.
     * @tc.size MediumTest
     * @tc.type Function
     * @tc.level Level 2
     */
    it("ACTS_PRINT_SYNC_0005", Level.LEVEL2, async (done: () => void): Promise<void> =>{
      console.log("ACTS_PRINT_SYNC_0005 :start");
      let msg: string = "printSync language: 中文 English  Русский язык Français";
      abilityDelegator.printSync(msg);
      abilityDelegator.printSync("ACTS_PRINT_SYNC_0005 printSync");
      expect(true).assertTrue();
      done();
    });

    /**
     * @tc.number ACTS_PRINT_SYNC_0006
     * @tc.name ACTS_PRINT_SYNC_0006
     * @tc.desc Test the api "abilityDelegator.print", return the result.
     *               the length of the printSync message is greater than 1000 characters.
     * @tc.size MediumTest
     * @tc.type Function
     * @tc.level Level 2
     */
    it("ACTS_PRINT_SYNC_0006", Level.LEVEL2, async (done: () => void): Promise<void> =>{
      console.log("ACTS_PRINT_SYNC_0006 :start");
      let msg: string =
        "0callbackaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +
          "aaaaaaaaaa" +
          "1aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +
          "2aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +
          "3aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +
          "4aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +
          "5aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +
          "6aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +
          "7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +
          "8aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" +
          "9aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaae" +
          "fffffffffff";
      abilityDelegator.printSync(msg);
      abilityDelegator.printSync("ACTS_PRINT_SYNC_0006 printSync");
      expect(true).assertTrue();
      done();
    });
  });
}
