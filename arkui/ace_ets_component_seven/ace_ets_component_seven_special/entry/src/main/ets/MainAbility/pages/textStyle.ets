
/**
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

class TextModifier1 implements AttributeModifier<TextAttribute>{
  fontColor: Color = Color.Red;
  fontSize: number = 20;
  fontStyle: FontStyle = FontStyle.Italic;
  fontWeight: number = 700;
  textAlign: TextAlign = TextAlign.JUSTIFY;
  applyNormalAttribute(instance: TextAttribute): void {
    instance.fontColor(this.fontColor)
      .fontSize(this.fontSize)
      .fontStyle(this.fontStyle)
      .fontWeight(this.fontWeight)
      .textAlign(this.textAlign)
  }
}

@Entry
@Component
struct TextStyle {
  @State textModifier1: TextModifier1 = new TextModifier1()
  build() {
    Column({ space: 20 }) {
      Text('text1').fontSize(20)
        .attributeModifier(this.textModifier1)
        .key('text1')

    }.width('100%').margin({ top: 20 })
  }
}
