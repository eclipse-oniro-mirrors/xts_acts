/*
 * Copyright (C) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import photoAccessHelper from '@ohos.file.photoAccessHelper';
import sendablePhotoAccessHelper from '@ohos.file.sendablePhotoAccessHelper';
import { describe, it, expect, beforeAll, beforeEach, afterEach, afterAll, Level } from '@ohos/hypium';
import { common } from '@kit.AbilityKit';
import { driveFn, fetchAllOption, getPermission, photoKeys, fetchOption, LOG_TAG } from '../../common';
import { BusinessError } from '@kit.BasicServicesKit';

const TAG = LOG_TAG + 'getAssets';

async function getAssetsPromiseTest(done: Function, testName: string, AlbumType: sendablePhotoAccessHelper.AlbumType,
  AlbumSubtype: sendablePhotoAccessHelper.AlbumSubtype, fetchOps: photoAccessHelper.FetchOptions) {
  let testContext: common.UIAbilityContext = AppStorage.get('testContext') as common.UIAbilityContext;
  const sendablePhAccessHelper = sendablePhotoAccessHelper.getPhotoAccessHelper(testContext);
  try {
    let albumList: sendablePhotoAccessHelper.FetchResult<sendablePhotoAccessHelper.Album> =
      await sendablePhAccessHelper.getAlbums(AlbumType,
        AlbumSubtype, fetchOps);
    let albumCount = await albumList.getCount();
    if (albumCount > 0) {
      let sendableAlbum: sendablePhotoAccessHelper.Album = await albumList.getFirstObject();
      sendableAlbum.getAssets(fetchOps).then((albumFetchResult) => {
        console.info(TAG, 'album getAssets successfully, getCount: ' + testName + albumFetchResult.getCount());
        expect(true).assertTrue();
      }).catch((err: BusinessError) => {
        console.error(TAG, `commitModify failed with error: ${err.code}, ${err.message}`);
        expect().assertFail();
      });
    }
    done();
  } catch (error) {
    console.error(TAG, `${testName} :: convertToSendableAlbum failed, err is ${error}`);
    expect().assertFail();
    done();
  }
}

export default function sendableGetAssetsTest() {
  describe('sendableGetAssetsTest', () => {
    beforeAll(async () => {
      console.info(TAG, 'beforeAll case');
      await getPermission();
      await driveFn();
    });

    beforeEach(() => {
      console.info(TAG, 'beforeEach case.');
    });

    afterEach(() => {
      console.info(TAG, 'afterEach case.');
    });

    afterAll(() => {
      console.info(TAG, 'afterAll case.');
    });

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_001
     * @tc.name      : getAssets_sendable_promise_001
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_001', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_001';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.USER_GENERIC;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_002
     * @tc.name      : getAssets_sendable_promise_002
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_002', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_002';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.USER_GENERIC;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_003
     * @tc.name      : getAssets_sendable_promise_003
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_003', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_003';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.USER_GENERIC;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_004
     * @tc.name      : getAssets_sendable_promise_004
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_004', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_004';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.FAVORITE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_005
     * @tc.name      : getAssets_sendable_promise_005
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_005', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_005';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.FAVORITE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_006
     * @tc.name      : getAssets_sendable_promise_006
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_006', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_006';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.FAVORITE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_007
     * @tc.name      : getAssets_sendable_promise_007
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_007', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_007';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.VIDEO;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_008
     * @tc.name      : getAssets_sendable_promise_008
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_008', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_008';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.VIDEO;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_009
     * @tc.name      : getAssets_sendable_promise_009
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_009', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_009';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.VIDEO;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_010
     * @tc.name      : getAssets_sendable_promise_010
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_010', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_010';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.IMAGE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_011
     * @tc.name      : getAssets_sendable_promise_011
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_011', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_011';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.IMAGE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_012
     * @tc.name      : getAssets_sendable_promise_012
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_012', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_012';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.IMAGE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_013
     * @tc.name      : getAssets_sendable_promise_013
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_013', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_013';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.ANY;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_014
     * @tc.name      : getAssets_sendable_promise_014
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_014', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_014';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.ANY;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_015
     * @tc.name      : getAssets_sendable_promise_015
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_015', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_015';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.USER;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.ANY;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_016
     * @tc.name      : getAssets_sendable_promise_016
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_016', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_016';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.USER_GENERIC;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_017
     * @tc.name      : getAssets_sendable_promise_017
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_017', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_017';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.USER_GENERIC;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_018
     * @tc.name      : getAssets_sendable_promise_018
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_018', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_018';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.USER_GENERIC;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_019
     * @tc.name      : getAssets_sendable_promise_019
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_019', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_019';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.FAVORITE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_020
     * @tc.name      : getAssets_sendable_promise_020
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_020', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_020';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.FAVORITE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_021
     * @tc.name      : getAssets_sendable_promise_021
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_021', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_021';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.FAVORITE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_022
     * @tc.name      : getAssets_sendable_promise_022
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_022', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_022';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.VIDEO;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_023
     * @tc.name      : getAssets_sendable_promise_023
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_023', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_023';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.VIDEO;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_024
     * @tc.name      : getAssets_sendable_promise_024
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_024', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_024';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.VIDEO;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_025
     * @tc.name      : getAssets_sendable_promise_025
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_025', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_025';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.IMAGE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_026
     * @tc.name      : getAssets_sendable_promise_026
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_026', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_026';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.IMAGE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_027
     * @tc.name      : getAssets_sendable_promise_027
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_027', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_027';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.IMAGE;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_028
     * @tc.name      : getAssets_sendable_promise_028
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_028', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_028';
      let fetchOps: photoAccessHelper.FetchOptions = fetchAllOption();
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.ANY;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_029
     * @tc.name      : getAssets_sendable_promise_029
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_029', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_029';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.IMAGE);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.ANY;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })

    /**
     * @tc.number    : SENDABLE_ALBUM_GET_ASSETS_030
     * @tc.name      : getAssets_sendable_promise_030
     * @tc.desc      : getAssets
     * @tc.size      : MEDIUM
     * @tc.type      : Function
     * @tc.level     : Level 0
     */
    it('getAssets_sendable_promise_030', Level.LEVEL0, async (done: Function) => {
      const testName = 'getAssets_sendable_promise_030';
      let fetchOps: photoAccessHelper.FetchOptions =
        fetchOption(testName, photoKeys.PHOTO_TYPE, sendablePhotoAccessHelper.PhotoType.VIDEO);
      const AlbumType = sendablePhotoAccessHelper.AlbumType.SYSTEM;
      ;
      const AlbumSubtype = sendablePhotoAccessHelper.AlbumSubtype.ANY;
      await getAssetsPromiseTest(done, testName, AlbumType, AlbumSubtype, fetchOps);
    })
  })
}